{
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
for(i in 1:length(y))
{
#caso o primeiro valor seja NA procura o proximo valor nao NA e coloca
#no lugar do NA
if (is.na(y[1]) == TRUE)
{
encontrou = FALSE
cont = 1
posterior = NA
#procura o primeiro numero POSTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[1+cont]) == TRUE)
{
cont <- cont + 1
}
else
{
posterior <- y[1+cont];
encontrou <- TRUE
}
}
y[1] <- posterior
}
#caso o ultimo valor seja NA procura o primeiro valor anterior que nao NA e coloca
#no lugar do NA
if (is.na(y[length(y)]) == TRUE)
{
encontrou <- FALSE
cont <- 1
anterior <- NA
#procura o primeiro numero ANTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[length(y)-cont]) == TRUE)
{
cont <- cont + 1
}
else
{
anterior <- y[length(y)-cont];
encontrou <- TRUE
}
}
y[length(y)] <- anterior
}
if (is.na(y[i])==TRUE)
{
encontrou <- FALSE
cont <- 1
anterior <- NA
#procura o primeiro numero ANTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[i-cont]) == TRUE)
{
cont <- cont + 1
}
else
{
anterior <- y[i-cont];
encontrou <- TRUE
}
}
encontrou = FALSE
cont = 1
posterior = NA
#procura o primeiro numero POSTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[i+cont]) == TRUE)
{
cont <- cont + 1
}
else
{
posterior <- y[i+cont];
encontrou <- TRUE
}
}
#executa uma media entre o anterior e posterior valor valido na serie e insere no lugar do outlier
y[i] <- (anterior+posterior)/2
}
}
return(y)
}
temperaturas <- read.table(temperaturas.csv,
header=TRUE,
sep=";",
colClasses=c("character", "character", "character", rep("numeric",2)),
na="?")
padroniza <- function(s)
{
retorno <- (s - min(s))/(max(s)-min(s))
return(retorno)
}
temp <- temperaturas$TempMaxima
temperaturas <- read.table("temperaturas.csv",
header=TRUE,
sep=";",
colClasses=c("character", "character", "character", rep("numeric",2)),
na="?")
temperaturas <- read.table("temperaturas.csv",
header=TRUE,
sep=";",
colClasses=c("character", "character", "character", rep("numeric",2)),
na="?")
temp <- temperaturas$TempMaxima
umi <- temperaturas$Umidade.Relativa.Media
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
boxplot(temp)
boxplot(umi)
temp <- ajustaOutliers(temp)
umi <- ajustaOutliers(umi)
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
boxplot(temp)
boxplot(umi)
temp <- padroniza(temp)
umi <- padroniza(umi)
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
boxplot(temp)
boxplot(umi)
dados <- cbind(temp,umi)
tempeumi_2015 <- temperaturas[1458:1822,]
temp15ajus <- tempeumi_2015$TempMaxima
umi15ajus <- tempeumi_2015$Umidade.Relativa.Media
temp15ajus <- ajustaOutliers(temp15ajus)
umi15ajus <- ajustaOutliers(umi15ajus)
temp15ajus <- padroniza(temp15ajus)
umi15ajus <- padroniza(umi15ajus)
plot(temp15ajus, type="l")
plot(umi15ajus, type="l")
hist(temp15ajus)
hist(umi15ajus)
boxplot(temp15ajus)
boxplot(umi15ajus)
plot(tempeumi_2015$Data, temp15ajus,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(temp15ajus, tempeumi_2015$Data
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(tempeumi_2015$Data, temp15ajus,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(temp15ajus,tempeumi_2015$Data,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
rm(list=ls())
cat('\014')
library("RSNNS")
previsor <- function(horario,rede)
{
hora <- paste("2007-02-01 ",horario,":00 BRST",sep = "")
indice <- which(consumo$Time == hora)
x <- padroniza(seq(1:length(consumo$Time)))
momento <- x[indice]
valor <- predict(rede,momento)
return(paste("As ",horario," o consumo sera de ",round(valor,2)," KW.",sep=""))
}
sech2<-function(u)
{
((2/(exp(u)+exp(-u)))*(2/(exp(u)+exp(-u))))
}
ajustaOutliers <- function(x, na.rm = TRUE, ...)
{
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
for(i in 1:length(y))
{
#caso o primeiro valor seja NA procura o proximo valor nao NA e coloca
#no lugar do NA
if (is.na(y[1]) == TRUE)
{
encontrou = FALSE
cont = 1
posterior = NA
#procura o primeiro numero POSTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[1+cont]) == TRUE)
{
cont <- cont + 1
}
else
{
posterior <- y[1+cont];
encontrou <- TRUE
}
}
y[1] <- posterior
}
#caso o ultimo valor seja NA procura o primeiro valor anterior que nao NA e coloca
#no lugar do NA
if (is.na(y[length(y)]) == TRUE)
{
encontrou <- FALSE
cont <- 1
anterior <- NA
#procura o primeiro numero ANTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[length(y)-cont]) == TRUE)
{
cont <- cont + 1
}
else
{
anterior <- y[length(y)-cont];
encontrou <- TRUE
}
}
y[length(y)] <- anterior
}
if (is.na(y[i])==TRUE)
{
encontrou <- FALSE
cont <- 1
anterior <- NA
#procura o primeiro numero ANTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[i-cont]) == TRUE)
{
cont <- cont + 1
}
else
{
anterior <- y[i-cont];
encontrou <- TRUE
}
}
encontrou = FALSE
cont = 1
posterior = NA
#procura o primeiro numero POSTERIOR ao valor atual que nao seja NA
while (encontrou == FALSE)
{
if (is.na(y[i+cont]) == TRUE)
{
cont <- cont + 1
}
else
{
posterior <- y[i+cont];
encontrou <- TRUE
}
}
#executa uma media entre o anterior e posterior valor valido na serie e insere no lugar do outlier
y[i] <- (anterior+posterior)/2
}
}
return(y)
}
padroniza <- function(s)
{
retorno <- (s - min(s))/(max(s)-min(s))
return(retorno)
}
temperaturas <- read.table("temperaturas.csv",
header=TRUE,
sep=";",
colClasses=c("character", "character", "character", rep("numeric",2)),
na="?")
temp <- temperaturas$TempMaxima
umi <- temperaturas$Umidade.Relativa.Media
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
boxplot(temp)
boxplot(umi)
temp <- ajustaOutliers(temp)
umi <- ajustaOutliers(umi)
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
boxplot(temp)
boxplot(umi)
temp <- padroniza(temp)
umi <- padroniza(umi)
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
boxplot(temp)
boxplot(umi)
dados <- cbind(temp,umi)
tempeumi_2015 <- temperaturas[1458:1822,]
temp15ajus <- tempeumi_2015$TempMaxima
umi15ajus <- tempeumi_2015$Umidade.Relativa.Media
temp15ajus <- ajustaOutliers(temp15ajus)
umi15ajus <- ajustaOutliers(umi15ajus)
temp15ajus <- padroniza(temp15ajus)
umi15ajus <- padroniza(umi15ajus)
plot(temp15ajus, type="l")
plot(umi15ajus, type="l")
hist(temp15ajus)
hist(umi15ajus)
boxplot(temp15ajus)
boxplot(umi15ajus)
plot(temp15ajus,tempeumi_2015$Data,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
tempeumi_2015$Data
plot(temp15ajus,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(temp15ajus, tempeumi_2015$Data,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(temp15ajus, tempeumi_2015$Data, ymin="01/01/2015", ymax="31/12/2015"
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(temp15ajus, tempeumi_2015$Data, ymin="01/01/2015", ymax="31/12/2015",
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
tempeumi_2015$Data
plot(temp15ajus, type="l")
plot(umi15ajus, type="l")
plot(tempeumi_2015$Data, temp15ajus,
type="l",
xlab="",
ylab="Data e sua umidade relativa media")
plot(temp)
tempeumi_2015$Data
data15 <- tempeumi_2015$Data[1:361]
data15
plot(data15, temp15ajus,
type="l",
xlab="data",
ylab="temperatura")
temp15ajus
data15 <- tempeumi_2015$Data[1:365]
data15
plot(data15, temp15ajus,
type="l",
xlab="data",
ylab="temperatura")
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
temperaturas <- carrega_subset("temperaturas.csv", "2011-01-01","2015-01-01")
carrega_subset <- function(arquivo,inicio,fim)
{
dados <- read.table(arquivo,
header=TRUE,
sep=";",
colClasses=c("character", "character", "character", rep("numeric",2)),
na="?")
# converte para datetime
#dados$Hora <- strptime(paste(dados$Data, dados$Hora), "%d/%m/%Y %H:%M:%S")
dados$Data <- as.Date(dados$Data, "%d/%m/%Y")
# separa o subset que vai de <inicio> a <fim>
#dates <- as.Date(c(inicio, fim), "%Y-%m-%d")
#dados <- subset(dados, Data %in% dates)
return(dados)
}
temperaturas <- carrega_subset("temperaturas.csv", "2011-01-01","2015-01-01")
temp <- temperaturas$TempMaxima
umi <- temperaturas$Umidade.Relativa.Media
plot(temp, type="l")
plot(umi, type="l")
hist(temp)
hist(umi)
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
plot(tempeumi_2015$Data, temp15ajus,
type="l",
xlab="data",
ylab="temperatura")
plot(tempeumi_2015$Data, umi15ajus,
type="l",
xlab="data",
ylab="temperatura")
plot(temp,type = "l")
plot(umi,type = "l")
boxplot(temp15ajus)
plot(tempeumi_2015$Data, temp15ajus,
type="l",
xlab="data",
ylab="temperatura")
plot(tempeumi_2015$Data, umi15ajus,
type="l",
xlab="data",
ylab="umidade")
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
umi15ajus
View(temperaturas)
tempeumi2016 <- temperaturas[1822:2171]
tempeumi2016 <- temperaturas[1822:2171,]
umi16
umi16 <- tempeumi2016$Umidade.Relativa.Media
umi16
umi16 <- ajustaOutliers(umi16)
umi16
tempeumi2016 <- temperaturas[1822:2171,]
umi16 <- tempeumi2016$Umidade.Relativa.Media
umi16ajus <- ajustaOutliers(umi16)
temp16ajus <- ajustaOutliers(tempeumi2016$TempMaxima)
z1<-padroniza(as.numeric(tempeumi2016$Data))
z2<-padroniza(umi16ajus)
z <- cbind(z1,z2)
y<-padroniza(temp16ajus)
yhat = vector()
for (i in 1:length(z[,1]))
{
print(i)
yhat[i] = predict(redeCA,z[i,])
}
erromlpca <- mean(sqrt((y-yhat)^2))
print(paste("ERRO MLP CA:",erromlpca))
yhat <- despadroniza(yhat, min(tempeumi2016$TempMaxima), max(tempeumi2016$TempMaxima))
despadroniza <- function(x,mx,mn)
{
retorno <- (x*(mx-mn))/mn
return(retorno)
}
yhat <- despadroniza(yhat, min(tempeumi2016$TempMaxima), max(tempeumi2016$TempMaxima))
erromlpca <- mean(sqrt((y-yhat)^2))
print(paste("ERRO MLP CA:",erromlpca))
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
plot(tempeumi2016$Data, yhat, col="blue", type="l", ylab="", xaxt='n', yaxt='n')
plot(tempeumi2016$Data, y, col="blue", type="l", ylab="", xaxt='n', yaxt='n')
plot(tempeumi2016$Data, yhat, col="blue", type="l", ylab="", xaxt='n', yaxt='n')
par(new=T)
plot(tempeumi2016$Data, y, col="red", type="l", ylab="", xaxt='n', yaxt='n')
temp16ajus <- tempeumi2016$TempMaxima
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
yhat
min(tempeumi2016$TempMaxima)
max(tempeumi2016$TempMaxima
max(tempeumi2016$TempMaxima)
max(tempeumi2016$TempMaxima)
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
yhat
y
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
yhat
despadroniza <- function(x)
{
x*(37.1 - 22) + 22
}
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
yhat <- despadroniza(yhat)
yhat
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
View(temperaturas)
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
temp16ajus
View(temperaturas)
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
?RSNNS
?mlp
View(temperaturas)
View(temperaturas)
erromlpca <- mean(sqrt((y-yhat)^2))
print(paste("ERRO MLP CA:",erromlpca))
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
source('~/Arquivos IX Semestre/Tópicos Especiais em Engenharia de Computação/Temperatura/previsao.R')
